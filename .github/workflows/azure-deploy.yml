name: Deploy to Azure App Service

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, dom, filter, gd, json
        tools: composer:v2

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"

    - name: Install PHP Dependencies
      run: composer install --optimize-autoloader --no-dev

    - name: Generate key
      run: php artisan key:generate

    - name: Install Node Dependencies
      run: npm ci

    - name: Build Assets
      run: npm run build

    - name: Run Laravel production optimizations
      run: |
        php artisan config:cache
        php artisan route:cache
        php artisan view:cache

    - name: Create deployment package
      run: |
        # Create a deployment directory
        mkdir -p deploy
        
        # Copy all necessary files to deployment directory
        cp -r app bootstrap config database public resources routes storage deploy/
        cp -r vendor deploy/
        cp .env artisan composer.json composer.lock deploy/
        cp nginx.conf startup.sh .deployment deploy/
        
        # Copy built assets
        cp -r public/build deploy/public/
        
        # Set proper permissions
        chmod -R 755 deploy/storage deploy/bootstrap/cache
        chmod +x deploy/startup.sh
        
        # Create zip package
        cd deploy
        zip -r ../deployment.zip .
        cd ..

    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: deployment.zip
        startup-command: 'bash /home/site/wwwroot/startup.sh'

